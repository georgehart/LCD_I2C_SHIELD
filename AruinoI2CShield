/*********************

Georges Hart june 2019

The shield uses the I2C SCL and SDA pins. On classic Arduinos
this is Analog 4 and 5 so you can't use those for analogRead() anymore
However, you can connect other I2C sensors to the I2C bus and share the I2C bus.

**********************/

#include <Wire.h>
#include <Adafruit_RGBLCDShield.h>
#include <utility/Adafruit_MCP23017.h>

// ----- Instance Loading -----
Adafruit_RGBLCDShield lcd = Adafruit_RGBLCDShield();

// ----- Definitions -----

#define WHITE 0x7                         //  set the backlight color WHITE

// ------ Variables -----
uint8_t i=0;
unsigned int dkpauze =500;

void setup() {
  lcd.setBacklight(WHITE);
  lcd.begin(16, 2);                       // set up the LCD's number of columns and rows: 3000
  lcd.setCursor(0, 0); lcd.print("TFE 2019");
  lcd.setCursor(0, 1); lcd.print("CALIB - CHECKER");
  delay(5000); 
}


void loop(){
  
  keyboard();
}



// ------ FUNCTIONS -----

void keyboard(void){
  uint8_t buttons = lcd.readButtons();

  if (buttons) {
    lcd.clear();
    lcd.setCursor(0,0);
    if (buttons & BUTTON_UP) {
      
      screenInfo(3);
       delay(dkpauze);
   
    }
    if (buttons & BUTTON_DOWN) {
    ;
      screenInfo(4);
      delay(dkpauze);
    
    }
    if (buttons & BUTTON_LEFT) {
     
      screenInfo(1);
      delay(dkpauze);
   
    }
    if (buttons & BUTTON_RIGHT) {
;
      screenInfo(2);
      delay(dkpauze);
   
    }
    if (buttons & BUTTON_SELECT) {

      screenInfo(5);
      delay(dkpauze);
   
    }
  }
}


void screenInfo(int x){
  lcd.setBacklight(WHITE); 
  
  switch(x){

    case 1:
          lcd.begin(16, 2);
          lcd.setCursor(0, 0); lcd.print("  PUSHED: LEFT  ");
          lcd.setCursor(0, 1); lcd.print("----------------");
    break;
    case 2:
          lcd.begin(16, 2);
          lcd.setCursor(0, 0); lcd.print(" PUSHED: RIGHT  ");
          lcd.setCursor(0, 1); lcd.print("----------------");
    break;
    case 3:
          lcd.begin(16, 2);
          lcd.setCursor(0, 0); lcd.print("   PUSHED: UP   ");
          lcd.setCursor(0, 1); lcd.print("----------------");
    break;
    case 4:
          lcd.begin(16, 2);
          lcd.setCursor(0, 0); lcd.print("  PUSHED: DOWN  ");
          lcd.setCursor(0, 1); lcd.print("----------------");
    break;
    case 5:
          lcd.begin(16, 2);
          lcd.setCursor(0, 1); lcd.print("SOFT VER: 0.3");
          lcd.setCursor(0, 0); lcd.print("SELECTION:");
    break;
    
  }  
}
